// JavaScript Document
var maximo = 10;
var tabs;
var validator;
var nitems = 0;
var ndocumentos = 0;
$(document).ready(function() {
    validador();
    validadorFormDialog();
    validadorBusqueda();
    fechas();
    paginarResultados("ordenarlistar");
});
function marcarPadre(idCheck){
    var i;
    var codigo=$(idCheck).attr("codigo");
    var aux;

    if(idCheck.checked==true){
        while(codigo.length>2){
            codigo= codigo.substring(0,codigo.length-3);
            if(codigo.length!=0){
                for(i=0;i<document.getElementsByName("pertxt_txt").length;i++){
                    aux=document.getElementsByName("pertxt_txt")[i];
                    if($(aux).attr("codigo")==codigo){
                        document.getElementsByName("pertxt_txt")[i].checked=true;
                        break;
                    }
                }
            }
        }
    }
}
function cargarLista(id, url, tipo){
    document.getElementById(id).disabled = "disabled";
    if(url != ""){
        $.ajax({
            url: url,
            type: "POST",
            data: "",
            success: function(datos){
                if(tipo == 0){
                    $("#"+id).html("");
                    $("#"+id).append(datos);                    
                }
                if(tipo == 1){
                    document.getElementById(id).value = datos;
                }
                document.getElementById(id).disabled = false;                
            },
            error: function(){
                alert("Error en el procesamiento");
            }
        });
    }
    $('#'+id).show();
}
function fechas() {
    $(".fecha").datepicker({
        buttonImage: false,
        dateFormat: "dd-mm-yy",
        changeYear: true,
        numberOfMonths: 1
    });
    $(".fechajanium").datepicker({
        buttonImage: false,
        dateFormat: "yymmdd",
        changeYear: true,
        numberOfMonths: 1
    });
}
jQuery.fn.reset = function() {
    $(this).each(function() {
        this.reset();
    });
}
function validador() {
    validator = $("#FormAplication").validate({
        rules: {
        },
        messages: {
        },
        submitHandler: function() {
            //alert("alerta");
            try {
                if (ValidarCKEditor('FormAplication')) {
                    return false;
                }
            } catch (ex) {
                alert(ex);
            }
            var cadenaFormulario = $('#FormAplication').serialize();
            var request = $('#FormAplication #request').val();
            var funcion = $('#FormAplication #accion').val();
            alerta("Mensaje del Sistema", "espera", "dialog");
            //alert(cadenaFormulario);
            $.ajax({
                url: request,
                type: "POST",
                data: cadenaFormulario,
                contentType: "application/x-www-form-urlencoded;charset=ISO-8859-15",
                //dataType: ($.browser.msie) ? "text" : "xml",
                dataType: "xml",
                success: function(datos) {
                    var xml;
                    /*if (typeof datos == 'string') {
                     xml = new ActiveXObject('Microsoft.XMLDOM');
                     xml.async = false;
                     xml.loadXML(datos);
                     } else {
                     }*/
                    xml = datos;
                    procesarRequest(xml);
                },
                error: function() {
                    alert("Error en el procesamiento");
                }
            });
        },
        success: function(label) {

        }
    });
    validator = $("#Seguridad").validate({
        rules: {
        },
        messages: {
        },
        submitHandler: function () {

            var cadenaFormulario = $('#Seguridad').serialize();
            var request = document.getElementById("request").value;
            var funcion = document.getElementById("accion").value;
            //alert(cadenaFormulario);
            if (funcion == "lrequerimiento") {
                var campos = document.getElementById("validar").value;
                if (campos != "") {
                    var vector = campos.split(",");
                    var lleno = 0;
                    for (a = 0; a < vector.length; a++) {
                        if (document.getElementById(vector[a]).value != "")
                            lleno++;
                    }
                } else
                    lleno = 1;
                if (lleno == 0) {
                    alert("Digite algun parametro de busqueda");
                    return 0;
                }
            }
            if (funcion == "listar") {
                if (document.getElementById("nombre_txt").value.length == 0 && document.getElementById("cedula_txt").value.length == 0) {
                    alerta("", "<center>Por favor ingrese por lo menos uno de<br>los dos parametros de busqueda<br><br><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog( \"close\" ); $(\"#mensaje\").remove();'></center>", "dialog");
                    return 0;
                }
            }

            /*if(funcion == "lusuario"){
             if(document.getElementById("nombre_txt").value.length==0 && document.getElementById("cedula_txt").value.length==0){
             alerta("", "<center>Por favor ingrese por lo menos uno de<br>los dos parametros de busqueda<br><br><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog( \"close\" ); $(\"#mensaje\").remove();'></center>", "dialog");
             return 0;
             }
             }*/

            alerta("Mensaje del Sistema", "espera", "dialog")
            $.ajax({
                url: request,
                type: "POST",
                dataType: "html",
                contentType: 'application/x-www-form-urlencoded; charset=iso-8859-1;',
                data: cadenaFormulario,
                success: function (datos) {
                    procesar(funcion, datos);
                },
                error: function () {
                    alert("Error en el procesamiento");
                }
            });
        },
        success: function (label) {

        }
    });
   
}
function alerta(titulo, mensaje, id) {
    if (mensaje == "espera") {
        document.getElementById(id).innerHTML = "<div id='mensaje' title='" + titulo + "'><center><img src='images/procesando.gif'></center></div>";
    } else {
        document.getElementById(id).innerHTML = "<div id='mensaje' title='" + titulo + "'>" + mensaje + "</div>";
    }
    $("#mensaje").dialog({
        height: 'auto',
        width: 'auto',
        bgiframe: true,
        closeOnEscape: false,
        open: function(event, ui) {
            $(this).parent().children().children('.ui-dialog-titlebar-close').hide();
        },
        overlay: {
            opacity: 0.3,
            background: "black"
        },
        beforeClose: function(event, ui) {
            $("#mensaje").remove();
        },
        hide: "scale",
        modal: true
    });
}
function paginarResultados(id){
    $("."+id)
    .tablesorter({
        widthFixed: true, 
        widgets: ['zebra'], 
        headers: {
            0: {
                sorter: false
            }
        }
    })
    .tablesorterPager({
        container: $("#pager"),  
        size: 5
    });
}
function MensajeAlerta(titulo, mensaje, id) {
    
        document.getElementById(id).innerHTML = "<div id='mensaje' title='" + titulo + "'></div> ";
    
    $("#mensaje").dialog({
        height: 'auto',
        width: 'auto',
        bgiframe: true
    });
    
    $(document).ready(function() {
        var config = {
            toolbar: [
                ['Maximize', 'Bold', 'Italic', 'NumberedList', 'BulletedList', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', 'Format', 'Font', 'FontSize']],
            height: "80",
            width: "100%"
        };

        var contenido = CKEDITOR.replace('observ_txt', config);
        contenido.on('change', function() {
            contenido.updateElement();
        });
        contenido.on('blur', function() {
            contenido.updateElement();
        });
    });
}
function procesarRequest(response) {
    var respuesta = "";
    var errores = "";
    var html = "";
    var noprocesado = "";
    $(response).find("ejecucion").each(function() {
        respuesta += $(this).find("respuesta").text();
        errores += $(this).find("errores").text();
        html += $(this).find("codigo").text();
    });
    //alert(respuesta);
    $("#mensaje").dialog("destroy");
    $("#mensaje").remove();
    if (_isNumeric(respuesta)) {
        if (respuesta == 0) {
            if (html != "") {
                if (errores != "") {
                    html += "<br/><a href='javascript:void(null)' onclick='$(\"#errores\").show();'> Mostrar Errores </a></a><div id='errores' style='display:none;'>" + errores + "</div>";
                }
                ModalRequest("Mensaje del Sistema", html, "dialog");
            }
        }
        if (respuesta == 1) {
            if (html != "") {
                if (errores != "") {
                    html += "<br/><a href='javascript:void(null)' onclick='$(\"#errores\").show();'> Mostrar Errores </a></a><div id='errores' style='display:none;'>" + errores + "</div>";
                }
                ModalRequest("Mensaje del Sistema", html, "dialog");
            } else {
                ModalRequest("Mensaje del Sistema", "Proceso Realizado Correctamente <br/> <center>  <input type='button' value = 'Cerrar' onclick='location.href=\"hcg_lis_usu.jsp\"'  class='ui-button ui-button-text-only ui-widget ui-state-default ui-corner-all'></center>", "dialog");
            }
        }
        if (respuesta == 2) {
            var pagina = $('#pagina_ocu').val();        ///crear en el formualrio campo oculto con el valor de la pagina a direccionar
            location.href = pagina;
        }
        if (respuesta == 3) {               ///crear en el formualrio campo oculto con el valor del id de la tabla o contenedor html
            var id = $('#iderec_ocu').val();
            alert(id);
            $('#' + id).html(html);
            LimpiarContenidos();
        }
    } else {
        if (errores != "") {
            noprocesado += "El proceso no se ha ejecutado <br/>";
            noprocesado += "<a href='javascript:void(null)' onclick='$(\"#errores\").show();'> Mostrar Errores </a><div id='errores' style='display:none;'>" + errores + "</div>";
            ModalRequest("Mensaje del Sistema", noprocesado, "dialog");
        }
    }
}
function LimpiarContenidos() {
    document.getElementById('Form-Dialog').reset();
    //$('#conten_txt').val('');
    CKEDITOR.instances["conten_txt"].setData('');
    CKEDITOR.instances["conten_txt"].updateElement();
    $('#t-items').html('');
}
function ventanaNueva(url) {
    var opciones = "left=100,top=100,width=800,height=500,toolbar=yes,resizable=yes";
    mi_ventana = window.open(url, "", opciones);
}
function _isNumeric(valor) {
    var _is = false;
    try {
        eval(valor);
        _is = true;
    } catch (ex) {
        _is = false;
    }
    return _is;
}
function direccionarlink(url) {
    if (url != "") {
        location.href = url;
    }
}
function ModalRequest(titulo, mensaje, id) {
    if (mensaje == "espera") {
        document.getElementById(id).innerHTML = "<div id='mensaje' title='" + titulo + "'><center><img src='images/cargando.gif'></center></div>";
    } else {
        document.getElementById(id).innerHTML = "<div id='mensaje' title='" + titulo + "'>" + mensaje + "</div>";
    }
    $("#mensaje").dialog({
        height: 'auto',
        width: 'auto',
        bgiframe: true,
        closeOnEscape: false,
        overlay: {
            opacity: 0.3,
            background: "black"
        },
        beforeClose: function(event, ui) {
            $("#mensaje").remove();
        },
        hide: "scale",
        modal: true
    });
    
}
function validadorBusqueda() {
    validator = $("#Form-Buscar").validate({
        rules: {
        },
        messages: {
        },
        submitHandler: function() {
            var cadenaFormulario = $('#Form-Buscar').serialize();
            var request = $('#Form-Buscar #request').val();
            var funcion = $('#Form-Buscar #accion').val();
            var texto = "";
            if ($('#Form-Buscar #validar').val() != '') {
                var campos = $('#Form-Buscar #validar').val();
                if (campos != "") {
                    var vector = campos.split(",");
                    var lleno = 0;
                    for (a = 0; a < vector.length; a++) {
                        //alert($('#' + vector[a]).attr('type'));
                        if ($('#' + vector[a]).attr("type") == 'checkbox') {
                            //alert($('#' + vector[a]).is("checked"));
                            if ($('#' + vector[a]).is(":checked")) {
                                lleno++;
                            }
                        } else {
                            if (document.getElementById(vector[a]).value != "")
                                lleno++;
                        }
                    }
                } else
                    lleno = 1;
                if (lleno == 0) {
                    alert("Digite algun parametro de busqueda");
                    return 0;
                }
            }
            alerta("Mensaje del Sistema", "espera", "dialog");
            $.ajax({
                url: request,
                type: "POST",
                data: cadenaFormulario,
                contentType: "application/x-www-form-urlencoded;charset=ISO-8859-15",
                success: function(datos) {
                    procesar(funcion, datos);
                },
                error: function() {
                    alert("Error en el procesamiento");
                }
            });
        },
        success: function(label) {

        }
    });
}
function procesar(accion, datos) {
    accion = accion.toString();
    var validarsession = new String(datos);

    try {
        var n = validarsession.match(/exit/gi);
        if (n.length > 0) {
            $("#mensaje").dialog("destroy");
            $("#mensaje").remove();
            alerta("SU SESION A TERMINADO", "LO SENTIMOS SU SESION NO HA PODIDO VERIFICARSE <br/> <br/> <center><input type='button' value = 'Cerrar' onclick='location.href=\"fuera.jsp\"' class='ui-button ui-button-text-only ui-widget ui-state-default ui-corner-all'></center>", "dialog")
            return false;
        }
    } catch (ex) {
    }
    if (accion == 'listar') {
        $("#mensaje").dialog("destroy");
        $("#mensaje").remove();
        $('#panelResultados').html('');
        $('#panelResultados').append(datos);
        //$(".ui-dialog-titlebar-close").show();
    }
    if (accion == 'enviarusuarios') {
        $("#mensaje").dialog("destroy");
        $("#mensaje").remove();
        $('#panelProcesamiento').html('');
        $('#panelProcesamiento').append(datos);
        $("#FormAplicationBuscar").submit();
    }
    if(accion == "agregarfamiliar"){
        if(_isNumeric(datos)){
            if(validarsession != 0){
                $("#mensaje").html("Se ha guardado Correctamente <br/> <input type='button' value = 'Cerrar' onclick='location.href=\"hcg_hcb_apl.jsp\"'>");
            }
            if(validarsession == 0){
                $("#mensaje").html("LA OPERACION NO SE HA COMPLETADO <br/> <br/> <center><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog( \"destroy\" );'></center>");
            }
        }else{
            alert("Se presento un problema en el Servidor \n Intentelo mas tarde");
        }
    }
    if(accion == "agregarfamiliar"){
        if(_isNumeric(datos)){
            if(validarsession != 0){
                $("#mensaje").html("Se ha guardado Correctamente <br/> <input type='button' value = 'Cerrar' onclick='location.href=\"hcg_hcb_apl.jsp\"'>");
            }
            if(validarsession == 0){
                $("#mensaje").html("LA OPERACION NO SE HA COMPLETADO <br/> <br/> <center><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog( \"destroy\" );'></center>");
            }
        }else{
            alert("Se presento un problema en el Servidor \n Intentelo mas tarde");
        }
    }
    if(accion == "agrevolucion"){
        if(_isNumeric(datos)){
            if(validarsession != 0){
                $("#mensaje").html("Se ha guardado Correctamente <br/> <center> <input type='button' value = 'Cerrar' onclick='location.href=\"hcg_hcb_evo.jsp\"'> </center>");
            }
            if(validarsession == 0){
                $("#mensaje").html("LA OPERACION NO SE HA COMPLETADO <br/> <br/> <center><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog( \"destroy\" );'></center>");
            }
        }else{
            alert("Se presento un problema en el Servidor \n Intentelo mas tarde");
        }
    }
    if(accion == "agregarantpersonal"){
        if(_isNumeric(datos)){
            if(validarsession != 0){
                $("#mensaje").html("Se ha guardado Correctamente <br/> <input type='button' value = 'Cerrar' onclick='location.href=\"hcg_hcb_ant.jsp\"'>");
            }
            if(validarsession == 0){
                $("#mensaje").html("LA OPERACION NO SE HA COMPLETADO <br/> <br/> <center><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog( \"destroy\" );'></center>");
            }
        }else{
            alert("Se presento un problema en el Servidor \n Intentelo mas tarde");
        }
    }
    if(accion == "agregarantfamilia"){
        if(_isNumeric(datos)){
            if(validarsession != 0){
                $("#mensaje").html("Se ha guardado Correctamente <br/> <input type='button' value = 'Cerrar' onclick='location.href=\"hcg_hcb_ant.jsp\"'>");
            }
            if(validarsession == 0){
                $("#mensaje").html("LA OPERACION NO SE HA COMPLETADO <br/> <br/> <center><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog( \"destroy\" );'></center>");
            }
        }else{
            alert("Se presento un problema en el Servidor \n Intentelo mas tarde");
        }
    }
    if(accion=="lsolicitud"){
        document.getElementById('panel').innerHTML = datos;
        $("#mensaje").hide();
        $("#mensaje").dialog( "destroy" );
        $("#mensaje").remove();
        paginarResultados('tablesorter');
    }
    return false;
}
function SeleccionarChecks(id, clase) {
    if ($('#' + id).is(':checked')) {
        $("." + clase).prop('checked', true);
    } else {
        $("." + clase).prop('checked', false);
    }
    ContarChecks(clase);
}
function ContarChecks(clase) {
    $("#numsel_txt").val($('input.' + clase + ':checkbox:checked').size());
}
function ProcesarSelecciones(clase, form) {
    if ($("." + clase + ":checked").size() < 1) {
        alert("Ninguna Registro Seleccionado");
        return false;
    }
    if ($("#vigenc_txt").val() == '') {
        alert("El Campo de Vigencia es Obligatorio");
        $("#vigenc_txt").focus();
        return false;
    }
    alerta("Mensaje del Sistema", "espera", "dialog");
    var cadenaFormulario = $('#' + form).serialize();
    //alert(cadenaFormulario);
    $.ajax({
        url: "jan_usu_epr.jsp",
        type: "POST",
        data: cadenaFormulario,
        cache: false,
        success: function(datos) {
            procesar('enviarusuarios', datos);
        },
        error: function() {
            alert("Error en el procesamiento");
        }
    });
}
function ventanaCerrar() {
    if (confirm("Esta seguro de salir de la Aplicacion")) {
        var opciones = "width=260, height=105, screenX=0, screenY=0, top=0, left=0, scrollbars=no, status=no, resizable=no";
        mi_close = window.open("fueraX.jsp", "FUERA", opciones);
        parent.window.close();
    }
}
function pasarMayusculas(cadena, id) {
    var result="";
    var str = cadena.split('');
 
    for(i=0; i<=str.length-1; i++) {
        str[i] = str[i].toUpperCase();
        result+=str[i];
    }
    //alert(result); 
    document.getElementById(id).value = result;
}
function ValidarCKEditor(FormId) {
    var respuesta = false;
    try {
        for (var i in CKEDITOR.instances) {
            CKEDITOR.instances[i].updateElement();
            if (CKEDITOR.instances[i].getData() == "") {
                var requerido = 0;
                try {
                    if (FormId != '' && FormId != undefined) {
                        //alert('#' + FormId + ' #' + CKEDITOR.instances[i].name);
                        var clases = $('#' + FormId + ' #' + CKEDITOR.instances[i].name).attr('class').split(/\s+/);
                        //alert("con form id " + clases.length);
                    } else {
                        //alert('#' + CKEDITOR.instances[i].name);
                        var clases = $('#' + CKEDITOR.instances[i].name).attr('class').split(/\s+/);
                        //alert("Sin form id " + clases.length);
                    }
                    for (a = 0; a < clases.length; a++) {
                        if (clases[a] == 'required') {
                            requerido = 1;
                            break;
                        }
                    }
                } catch (ex) {
                    console.log("No soportado CKEDITOR ERROR  : " + ex);
                }
                if (requerido != 0) {
                    alert('No se ha generado Contenido para el campo de texto.')
                    CKEDITOR.instances[i].focus();
                    respuesta = true;
                    break;
                }
            }
        }
    } catch (ex) {
    }
    return respuesta;
}
function ProcesarOpciones(operacion) {
    switch(operacion){
        
        case  1: 
            var ind = "";
            if ($("input[name='indeve_rad']:radio").is(':checked')) {
                ind = $("input:radio[name='indeve_rad']:checked").val();
                location.href = "fic_fic_agr.jsp?oper=retomar&ind=" + ind;
            } else {
                $("#errores").html("<strong>Debe seleccionar una opcion.</strong>");
            }
            break;
    
        case 2: 
     
            var ind = "";
            if ($("input[name='indeve_rad']:radio").is(':checked')) {
                ind = $("input:radio[name='indeve_rad']:checked").val();
                location.href = "fic_fic_agr.jsp?oper=descartar&ind=" + ind;
            } else {
                $("#errores").html("<strong>Debe seleccionar una opcion.</strong>");
            }
            break;
            
         case  3: 
            var ind = "";
            if ($("input[name='indeve_rad']:radio").is(':checked')) {
                ind = $("input:radio[name='indeve_rad']:checked").val();
                location.href = "fic_fic_mod.jsp?oper=retomar&ind=" + ind;
            } else {
                $("#errores").html("<strong>Debe seleccionar una opcion.</strong>");
            }
            break;
    
        case 4: 
     
            var ind = "";
            if ($("input[name='indeve_rad']:radio").is(':checked')) {
                ind = $("input:radio[name='indeve_rad']:checked").val();
                location.href = "fic_fic_mod.jsp?oper=descartar&ind=" + ind;
            } else {
                $("#errores").html("<strong>Debe seleccionar una opcion.</strong>");
            }
            break;
            
        case 5: 
     
            var ind = "";
            if ($("input[name='indeve_rad']:radio").is(':checked')) {
                ind = $("input:radio[name='indeve_rad']:checked").val();
                location.href = "fic_apr_dec.jsp?oper=retomar&ind=" + ind;
            } else {
                $("#errores").html("<strong>Debe seleccionar una opcion.</strong>");
            }
            break;
    }
}
function FormDialog(url, widht, height, titulo) {
    CerrarFormDialog();
    $("body").append('<div id="FormDialog"></div>');
    $('#FormDialog').dialog({
        modal: true,
        open: function()
        {
            $(this).load(url + "&ramdon=" + new Date().getTime());
        },
        close: function(event, ui) {
            CKEDITOR.remove(CKEDITOR.instances['conten_txt']);
        },
        height: height,
        width: widht,
        title: titulo,
        position: 'center top',
        bgiframe: true,
        hide: "scale",
        show: "scale"
    });

}
function validadorFormDialog() {
    validator = $("#Form-Dialog").validate({
        rules: {
        },
        messages: {
        },
        submitHandler: function() {
            try {
                if (ValidarCKEditor()) {
                    return false;
                }
            } catch (ex) {
                alert(ex);
            }
            var cadenaFormulario = $('#Form-Dialog').serialize();
            var request = $('#Form-Dialog #request').val();
            var funcion = $('#Form-Dialog #accion').val();
            alerta("Mensaje del Sistema", "espera", "dialog");
            $.ajax({
                url: request,
                type: "POST",
                data: cadenaFormulario,
                contentType: "application/x-www-form-urlencoded;charset=ISO-8859-15",
                //dataType: ($.browser.msie) ? "text" : "xml",
                dataType: "xml",
                success: function(datos) {
                    var xml;
                    /*if (typeof datos == 'string') {
                     xml = new ActiveXObject('Microsoft.XMLDOM');
                     xml.async = false;
                     xml.loadXML(datos);
                     } else {
                     }*/
                    xml = datos;
                    procesarRequest(xml);
                },
                error: function() {
                    alert("Error en el procesamiento");
                }
            });
        },
        success: function(label) {

        }
    });
    /*validator = $("#Form-Dialog").validate({
     rules: {
     },
     messages: {
     },
     submitHandler: function() {
     // alert("");
     var cadenaFormulario = $('#Form-Dialog').serialize();
     var request = $('#Form-Dialog #request').val();
     var funcion = $('#Form-Dialog #accion').val();
     var texto = "";
     // alert(cadenaFormulario);
     if (funcion == "lrequerimiento") {
     var campos = document.getElementById("validar").value;
     if (campos != "") {
     var vector = campos.split(",");
     var lleno = 0;
     for (a = 0; a < vector.length; a++) {
     if (document.getElementById(vector[a]).value != "")
     lleno++;
     }
     } else
     lleno = 1;
     if (lleno == 0) {
     alert("Digite algun parametro de busqueda");
     return 0;
     }
     }
     
     if (request == "car_nfp.jsp") {
     if (!confirm("Esta seguro de Generar Esta Novedad en la Carga Docente ?")) {
     return false;
     }
     }
     
     alerta("Mensaje del Sistema", "espera", "dialog");
     //alert(cadenaFormulario);
     $.ajax({
     url: request,
     type: "POST",
     data: cadenaFormulario,
     contentType: "application/x-www-form-urlencoded;charset=ISO-8859-15",
     success: function(datos) {
     //alert(funcion);
     procesarRequest(datos);
     },
     error: function() {
     alert("Error en el procesamiento");
     }
     });
     
     },
     success: function(label) {
     
     }
     });*/
    validator = $("#DaialogAplication").validate({
        rules: {
        },
        messages: {
        },
        submitHandler: function() {
            var cadenaFormulario = $('#DaialogAplication').serialize();
            //alert(cadenaFormulario);
            var request = $('#DaialogAplication #request').val();
            var funcion = $('#DaialogAplication #accion').val();
            //alert(request);
            var texto = "";
            if(funcion == "agregarItem"){
                var item = $('#item').val();
                var configuracion = "";
                
                if($('#config').val() == 0){
                    configuracion = '<td><input type="hidden" name="elebie_ocu'+item+'" value = "'+$('#carbie_sel').val()+'" />'+$('#carbie_sel option:selected').text()+'</td>';
                }
                
                if($('#config').val() == 1){                    
                    var elementobien = document.getElementsByName('ideelb_ocu');
                    var caracterbien = document.getElementsByName('carbie_sel');
                    configuracion = '<td>';
                    for(a = 0;a < elementobien.length; a++){
                        configuracion = configuracion + '<input type="hidden" name="elebie_ocu'+item+'" value = "'+$(elementobien[a]).val()+'" />\r\n'+$(elementobien[a]).attr('descripcion')+' : \r\n';
                        configuracion = configuracion + '<input type="hidden" name="cabocu_ocu'+item+'" value = "'+$(caracterbien[a]).val()+'" />\r\n'+$('#'+caracterbien[a].id+' option:selected').text()+'<br/>\r\n';
                    }
                    configuracion = configuracion + '</td>';
                    
                }
                
                if($('#config').val() == 2){
                    configuracion = '<td></td>';
                }
                
                var tds =   '<tr id="eliminar'+item+'">'+
                '<td><input type="hidden" name="numite_ocu" value = "'+item+'" /><input type="hidden" name="tipcon_ocu" value = "'+$('#config').val()+'" />'+item+'</td>'+
                '<td><input type="hidden" name="casocu_ocu'+item+'" value = "'+$('#cansol_txt').val()+'" />'+$('#cansol_txt').val()+'</td>'+
                '<td><input type="hidden" name="tibocu_ocu'+item+'" value = "'+$('#tipobi_sel').val()+'" />'+$('#tipobi_sel option:selected').text()+'</td>'+
                configuracion+
                '<td><input type="hidden" name="desocu_ocu'+item+'" value = "'+$('#descri_txt').val()+'" />'+$('#descri_txt').val()+'</td>'+
                '<td><a href="javascript:void(0)" onclick="eliminarfila(\'eliminar'+item+'\', \'\')">X</a></td>'+
                '</tr>';
                $("#items").append(tds);
                item = parseInt(item, 10) + 1;
                $('#item').val(item);
            }else{
                alerta("Mensaje del Sistema", "espera", "dialog")
                $.ajax({
                    url: request,
                    type: "POST",
                    data: cadenaFormulario,
                    success: function(datos){                   
                        procesar(funcion, datos);
                    },
                    error: function(){
                        alert("Error en el procesamiento");
                    }
                });
            }
        },
        success: function(label) {
						
        }
    });
}
function paginarResultados(id){
    $("."+id)
    .tablesorter({
        widthFixed: true, 
        widgets: ['zebra'], 
        headers: {
            0: {
                sorter: false
            }
        }
    })
    .tablesorterPager({
        container: $("#pager"),  
        size: 5
    });
}
function validarSeleccion(name, form, campovalue){
    try{
        var lista = document.getElementsByName(name);
        for(a=0;a < lista.length; a++){
            if(lista[a].checked){
                document.getElementById(campovalue).value = lista[a].value;
            }
        }
        if(document.getElementById(campovalue).value != ""){
            document.getElementById(form).submit();
        }else{
            alerta("", "<center>Ninguna seleccion encontrada<br><br><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog( \"destroy\" ); $(\"#mensaje\").remove();'></center>", "dialog");
        }
    }
    catch(ex){
        alerta("", "<center>Ninguna seleccion encontrada<br><br><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog( \"destroy\" ); $(\"#mensaje\").remove();'></center>", "dialog");
    }
}
function validadorFormTableBuscar() {
    validator = $("#Form-TableBuscar").validate({
        rules: {},
        messages: {},
        submitHandler: function() {
            try {
                if (ValidarCKEditor('Form-TableBuscar')) {
                    return false;
                }
            } catch (ex) {
                alert(ex);
            }
            var cadenaFormulario = $('#Form-TableBuscar').serialize();
            var request = $('#Form-TableBuscar #request').val();
            var funcion = $('#Form-TableBuscar #accion').val();
            alerta("Mensaje del Sistema", "espera", "dialog");
            $.ajax({
                url: request,
                type: "POST",
                data: cadenaFormulario,
                contentType: "application/x-www-form-urlencoded;charset=ISO-8859-15",
                //dataType: ($.browser.msie) ? "text" : "xml",
                dataType: "xml",
                success: function(datos) {
                    var xml;
                    xml = datos;
                    procesarRequest(xml);
                },
                error: function() {
                    alert("Error en el procesamiento");
                }
            });
        },
        success: function(label) {

        }
    });
}
function EliminarFila(ind, url, obj, modulo) {
    var cadenaFormulario = "indexm_ocu=" + ind;
    alerta("Mensaje del Sistema", "espera", "dialog");
    $.ajax({
        url: url,
        type: "POST",
        data: cadenaFormulario,
        contentType: "application/x-www-form-urlencoded;charset=ISO-8859-15",
        dataType: "xml",
        success: function(datos) {
            var xml;
            xml = datos;
            var respuesta = "";
            var errores = "";
            var html = "";
            var noprocesado = "";
            $(xml).find("ejecucion").each(function() {
                respuesta += $(this).find("respuesta").text();
                errores += $(this).find("errores").text();
                html += $(this).find("codigo").text();
            });
            $("#mensaje").dialog("destroy");
            $("#mensaje").remove();
            if (_isNumeric(respuesta)) {
                if (respuesta == 1) {

                    if (modulo == 'EliminarModulo') {
                        $($(obj).parent().parent()).remove();
                    }

                    if (html != "") {
                        if (errores != "") {
                            html += "<br/><a href='javascript:void(null)' onclick='$(\"#errores\").show();'> Mostrar Errores </a></a><div id='errores' style='display:none;'>" + errores + "</div>";
                        }
                        ModalRequest("Mensaje del Sistema", html, "dialog");
                    }
                }
            } else {
                if (errores != "") {
                    noprocesado += "El proceso no se ha ejecutado <br/>";
                    noprocesado += "<a href='javascript:void(null)' onclick='$(\"#errores\").show();'> Mostrar Errores </a><div id='errores' style='display:none;'>" + errores + "</div>";
                    ModalRequest("Mensaje del Sistema", noprocesado, "dialog");
                }
            }
        },
        error: function() {
            alert("Error en el procesamiento");
        }
    });
}
function RegargarTag(id, url, tipo) {
    //alert(url);
    if (url != "") {
        $.ajax({
            url: url,
            type: "POST",
            data: "",
            success: function(datos) {
                //alert(datos);
                if (tipo == 'select') {
                    $("#" + id).html("");
                    $("#" + id).append(datos);
                }
                if (tipo == 'table') {
                    $("#" + id).html("");
                    $("#" + id).append(datos);
                }
            },
            error: function() {
                alert("Error en el procesamiento");
            }
        });
    }
}
function EnviarOperacion(url, obj, modulo) {
    if (modulo == 'eliminarContenido') {
        if (!confirm("Eliminar El Contenido y Su Intensidad ?")) {
            return false;
        }
    }
    alerta("Mensaje del Sistema", "espera", "dialog");
    $.ajax({
        url: url,
        type: "POST",
        data: "modulo=" + modulo,
        contentType: "application/x-www-form-urlencoded;charset=ISO-8859-15",
        dataType: "xml",
        success: function(datos) {
            var xml;
            xml = datos;
            var respuesta = "";
            var errores = "";
            var html = "";
            var noprocesado = "";
            $(xml).find("ejecucion").each(function() {
                respuesta += $(this).find("respuesta").text();
                errores += $(this).find("errores").text();
                html += $(this).find("codigo").text();
            });
            $("#mensaje").dialog("destroy");
            $("#mensaje").remove();
            if (_isNumeric(respuesta)) {
                if (respuesta == 1) {
                    if (modulo == 'crearregistro') {
                        var nodo = buscarXML(xml, "idpersona");
                        if (nodo != "") {
                            $('#confer_txt').val($('#' + obj + ' td.NombrePersona').text());
                            $('#idecon_ocu').val(nodo);
                            CerrarFormDialog();
                        }
                        if (html != "") {
                            if (errores != "") {
                                html += "<br/><a href='javascript:void(null)' onclick='$(\"#errores\").show();'> Mostrar Errores </a></a><div id='errores' style='display:none;'>" + errores + "</div>";
                            }
                            ModalRequest("Mensaje del Sistema", html, "dialog");
                        }
                    }

                    if (modulo == 'eliminarIntensidad') {
                        $('#t-items').html(html);
                        SumarClase('i-horas', 'cantin_txt');
                    }

                    if (modulo == 'eliminarContenido') {
                        $('#t-contenidos').html(html);
                        SumarClase('i-contenidos', 'cantco_txt');
                    }
                }
                if (respuesta == 0) {
                    if (errores != "") {
                        noprocesado += "El proceso no se ha ejecutado <br/>";
                        noprocesado += "<center><input type='button' value = 'Cerrar' onclick='$(\"#mensaje\").dialog(\"destroy\"); $(\"#mensaje\").remove()'  class='ui-button ui-button-text-only ui-widget ui-state-default ui-corner-all'></center> <br/>";
                        noprocesado += "<a href='javascript:void(null)' onclick='$(\"#errores\").show();'> Mostrar Errores </a><div id='errores' style='display:none;'>" + errores + "</div>";
                        ModalRequest("Mensaje del Sistema", noprocesado, "dialog");
                    }
                }
            } else {
                if (errores != "") {
                    noprocesado += "El proceso no se ha ejecutado <br/>";
                    noprocesado += "<a href='javascript:void(null)' onclick='$(\"#errores\").show();'> Mostrar Errores </a><div id='errores' style='display:none;'>" + errores + "</div>";
                    ModalRequest("Mensaje del Sistema", noprocesado, "dialog");
                }
            }
        },
        error: function() {
            alert("Error en el procesamiento");
        }
    });
}
function CerrarFormDialog() {
    $("#FormDialog").dialog("destroy");
    $("#FormDialog").remove();
}
function buscarXML(xml, nodo) {
    var valor = "";
    $(xml).find("ejecucion").each(function() {
        valor += $(this).find(nodo).text();
    });
    return valor;
}
function Intensidad() {
    var error = 0;
    if ($('#duraci_txt').val() == '' || $('#duraci_txt').val() == '0') {
        error++;
    } else if ($('#horafi_sel').val() == '') {
        error++;
    } else if ($('#horain_sel').val() == '') {
        error++;
    } else if ($('#fecint_txt').val() == '') {
        error++;
    }
    if (error < 1) {
        alerta("Mensaje del Sistema", "espera", "dialog");
        var options = $('form[name=Form-Dialog]').find('input, textarea, select').filter('.intensidad').serialize();
        $.ajax({
            url: "fic_fic_pro.jsp?modulo=intensidad",
            type: "POST",
            data: options,
            contentType: "application/x-www-form-urlencoded;charset=ISO-8859-15",
            dataType: "xml",
            success: function(datos) {
                var xml;
                xml = datos;
                var respuesta = "";
                var errores = "";
                var html = "";
                var noprocesado = "";
                $(xml).find("ejecucion").each(function() {
                    respuesta += $(this).find("respuesta").text();
                    errores += $(this).find("errores").text();
                    html += $(this).find("codigo").text();
                });
                $("#mensaje").dialog("destroy");
                $("#mensaje").remove();
                if (_isNumeric(respuesta)) {
                    if (respuesta == 1) {
                        if (html != "") {
                            $('#t-items').html(html);
                            SumarClase('i-horas', 'cantin_txt');
                        }
                    }
                    if (respuesta == 0) {
                        ModalRequest("Mensaje del Sistema", html, "dialog");
                    }
                } else {
                    if (errores != "") {
                        noprocesado += "El proceso no se ha ejecutado <br/>";
                        noprocesado += "<a href='javascript:void(null)' onclick='$(\"#errores\").show();'> Mostrar Errores </a><div id='errores' style='display:none;'>" + errores + "</div>";
                        ModalRequest("Mensaje del Sistema", noprocesado, "dialog");
                    }
                }
            },
            error: function() {
                alert("Error en el procesamiento");
            }
        });
    }
}
function SumarClase(clase, id) {
    var suma = 0;
    $('.' + clase).each(function() {
        suma += parseInt($(this).text())
    })
    $('#' + id).val(suma);
}
/*************************************************************/
/****************  IDIOMA CALENDARIO *************************/
/*************************************************************/
jQuery(function($) {
    $.datepicker.regional['es'] = {
        closeText: 'Cerrar',
        prevText: '&#x3c;Ant',
        nextText: 'Sig&#x3e;',
        currentText: 'Hoy',
        monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
            'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
        monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun',
            'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
        dayNames: ['Domingo', 'Lunes', 'Martes', 'Mi&eacute;rcoles', 'Jueves', 'Viernes', 'S&aacute;bado'],
        dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mi&eacute;', 'Juv', 'Vie', 'S&aacute;b'],
        dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'S&aacute;'],
        weekHeader: 'Sm',
        dateFormat: 'dd/mm/yy',
        firstDay: 1,
        isRTL: false,
        showMonthAfterYear: false,
        yearSuffix: ''
    };
    $.datepicker.setDefaults($.datepicker.regional['es']);
});
/*************************************************************/
/****************  IDIOMA CALENDARIO *************************/
/*************************************************************/

var drawingApp = (function () {

    "use strict";

    var canvas,
            context,
            canvasWidth = 822,
            canvasHeight = 436,
            colorPurple = "#cb3594",
            colorGreen = "#659b41",
            colorYellow = "#ffcf33",
            colorBrown = "#986928",
            outlineImage = new Image(),
            crayonImage = new Image(),
            markerImage = new Image(),
            eraserImage = new Image(),
            crayonBackgroundImage = new Image(),
            markerBackgroundImage = new Image(),
            eraserBackgroundImage = new Image(),
            crayonTextureImage = new Image(),
            clickX = [],
            clickY = [],
            clickColor = [],
            clickTool = [],
            clickSize = [],
            clickDrag = [],
            paint = false,
            curColor = colorPurple,
            curTool = "marker",
            curSize = "normal",
            mediumStartX = 38, //clic marcador
            mediumStartY = 39, //Clic marcador
            mediumImageWidth = 93,
            mediumImageHeight = 46,
            drawingAreaX = 170, // ya
            drawingAreaY = 22, // ya
            drawingAreaWidth = 465, // ya
            drawingAreaHeight = 396, // ya
            toolHotspotStartY = 53, //macador y borrador
            toolHotspotHeight = 68, //macador y borrador
            sizeHotspotStartY = 357,
            sizeHotspotHeight = 56,
            totalLoadResources = 8, // ?
            curLoadResNum = 0,
            sizeHotspotWidthObject = {
                huge: 39,
                normal: 25

            },
    // Clears the canvas.
    clearCanvas = function () {

        context.clearRect(0, 0, canvasWidth, canvasHeight);
    },
            // Redraws the canvas.
            redraw = function () {

                var locX,
                        locY,
                        radius,
                        i,
                        selected,
                        drawMarker = function (x, y, color, selected) {

                            context.beginPath();
                            context.moveTo(x + 10, y + 24);
                            context.lineTo(x + 10, y + 24);
                            context.lineTo(x + 22, y + 16);
                            context.lineTo(x + 22, y + 31);
                            context.closePath();
                            context.fillStyle = color;
                            context.fill();

                            if (selected) {
                                context.drawImage(markerImage, x, y, mediumImageWidth, mediumImageHeight);
                            } else {
                                context.drawImage(markerImage, 0, 0, 59, mediumImageHeight, x, y, 59, mediumImageHeight);
                            }
                        };

                // Make sure required resources are loaded before redrawing
                if (curLoadResNum < totalLoadResources) {
                    return;
                }

                clearCanvas();

                if (curTool === "marker") {

                    // Draw the marker tool background
                    context.drawImage(markerBackgroundImage, 0, 0, canvasWidth, canvasHeight);

                    // Draw purple marker
                    selected = (curColor === colorPurple);
                    locX = selected ? 75 : 107;
                    locY = 19;
                    drawMarker(locX, locY, colorPurple, selected);

                    // Draw green marker
                    selected = (curColor === colorGreen);
                    locX = selected ? 75 : 107;
                    locY += 46;
                    drawMarker(locX, locY, colorGreen, selected);

                    // Draw yellow marker
                    selected = (curColor === colorYellow);
                    locX = selected ? 75 : 107;
                    locY += 46;
                    drawMarker(locX, locY, colorYellow, selected);

                    // Draw brown marker
                    selected = (curColor === colorBrown);
                    locX = selected ? 75 : 107;
                    locY += 46;
                    drawMarker(locX, locY, colorBrown, selected);

                } else if (curTool === "eraser") {

                    context.drawImage(eraserBackgroundImage, 0, 0, canvasWidth, canvasHeight);
                    context.drawImage(eraserImage, 75, 19, mediumImageWidth, mediumImageHeight);
                }

                // Draw line on ruler to indicate size
                switch (curSize) {

                    case "normal":
                        locX = 692;
                        break;

                    case "huge":
                        locX = 662;
                        break;
                    default:
                        break;
                }
                locY = 382;
                context.beginPath();
                context.rect(locX, locY, 2, 20);
                context.closePath();
                context.fillStyle = '#333333';
                context.fill();

                // Keep the drawing in the drawing area
                context.save();
                context.beginPath();
                context.rect(drawingAreaX, drawingAreaY, drawingAreaWidth, drawingAreaHeight);
                context.clip();

                // For each point drawn
                for (i = 0; i < clickX.length; i += 1) {

                    // Set the drawing radius
                    switch (clickSize[i]) {

                        case "normal":
                            radius = 5;
                            break;

                        case "huge":
                            radius = 20;
                            break;
                        default:
                            break;
                    }

                    // Set the drawing path
                    context.beginPath();
                    // If dragging then draw a line between the two points
                    if (clickDrag[i] && i) {
                        context.moveTo(clickX[i - 1], clickY[i - 1]);
                    } else {
                        // The x position is moved over one pixel so a circle even if not dragging
                        context.moveTo(clickX[i] - 1, clickY[i]);
                    }
                    context.lineTo(clickX[i], clickY[i]);

                    // Set the drawing color
                    if (clickTool[i] === "eraser") {
                        //context.globalCompositeOperation = "destination-out"; // To erase instead of draw over with white
                        context.strokeStyle = 'white';
                    } else {
                        //context.globalCompositeOperation = "source-over";	// To erase instead of draw over with white
                        context.strokeStyle = clickColor[i];
                    }
                    context.lineCap = "round";
                    context.lineJoin = "round";
                    context.lineWidth = radius;
                    context.stroke();
                }
                context.closePath();
                //context.globalCompositeOperation = "source-over";// To erase instead of draw over with white
                context.restore();

                //context.globalAlpha = 1; // No IE support

                // Draw the outline image
                context.drawImage(outlineImage, drawingAreaX, drawingAreaY, drawingAreaWidth, drawingAreaHeight);
            },
            // Adds a point to the drawing array.
            // @param x
            // @param y
            // @param dragging
            addClick = function (x, y, dragging) {

                clickX.push(x);
                clickY.push(y);
                clickTool.push(curTool);
                clickColor.push(curColor);
                clickSize.push(curSize);
                clickDrag.push(dragging);
            },
            // Add mouse and touch event listeners to the canvas
            createUserEvents = function () {

                var press = function (e) {
                    // Mouse down location
                    var sizeHotspotStartX,
                            mouseX = e.pageX - this.offsetLeft,
                            mouseY = e.pageY - this.offsetTop;

                    if (mouseX < drawingAreaX) { // Left of the drawing area
                        if (mouseX > mediumStartX) {
                            if (mouseY > mediumStartY && mouseY < mediumStartY + mediumImageHeight) {
                                curColor = colorPurple;
                            } else if (mouseY > mediumStartY + mediumImageHeight && mouseY < mediumStartY + mediumImageHeight * 2) {
                                curColor = colorGreen;
                            } else if (mouseY > mediumStartY + mediumImageHeight * 2 && mouseY < mediumStartY + mediumImageHeight * 3) {
                                curColor = colorYellow;
                            } else if (mouseY > mediumStartY + mediumImageHeight * 3 && mouseY < mediumStartY + mediumImageHeight * 4) {
                                curColor = colorBrown;
                            }
                        }
                    } else if (mouseX > drawingAreaX + drawingAreaWidth) { // Right of the drawing area

                        if (mouseY > toolHotspotStartY) {
                            if (mouseY > sizeHotspotStartY) {
                                sizeHotspotStartX = drawingAreaX + drawingAreaWidth;
                                if (mouseY < sizeHotspotStartY + sizeHotspotHeight && mouseX > sizeHotspotStartX) {
                                    if (mouseX < sizeHotspotStartX + sizeHotspotWidthObject.huge) {
                                        curSize = "huge";
                                    } else if (mouseX < sizeHotspotStartX + sizeHotspotWidthObject.normal + sizeHotspotWidthObject.huge) {
                                        curSize = "normal";
                                    }
                                }
                            } else {
                                if (mouseY < toolHotspotStartY + toolHotspotHeight * 2) {
                                    curTool = "marker";
                                } else if (mouseY < toolHotspotStartY + toolHotspotHeight * 3) {
                                    curTool = "eraser";
                                }
                            }
                        }
                    }
                    paint = true;
                    addClick(mouseX, mouseY, false);
                    redraw();
                },
                        drag = function (e) {
                            if (paint) {
                                addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
                                redraw();
                            }
                            // Prevent the whole page from dragging if on mobile
                            e.preventDefault();
                        },
                        release = function () {
                            paint = false;
                            redraw();
                        },
                        cancel = function () {
                            paint = false;
                        };

                // Add mouse event listeners to canvas element
                canvas.addEventListener("mousedown", press, false);
                canvas.addEventListener("mousemove", drag, false);
                canvas.addEventListener("mouseup", release);
                canvas.addEventListener("mouseout", cancel, false);

                // Add touch event listeners to canvas element
                canvas.addEventListener("touchstart", press, false);
                canvas.addEventListener("touchmove", drag, false);
                canvas.addEventListener("touchend", release, false);
                canvas.addEventListener("touchcancel", cancel, false);
            },
            // Calls the redraw function after all neccessary resources are loaded.
            resourceLoaded = function () {

                curLoadResNum += 1;
                if (curLoadResNum === totalLoadResources) {
                    redraw();
                    createUserEvents();
                }
            },
            // Creates a canvas element, loads images, adds events, and draws the canvas for the first time.
            init = function () {

                // Create the canvas (Neccessary for IE because it doesn't know what a canvas element is)
                canvas = document.createElement('canvas');
                canvas.setAttribute('width', canvasWidth);
                canvas.setAttribute('height', canvasHeight);
                canvas.setAttribute('id', 'canvas');
                document.getElementById('canvasDiv').appendChild(canvas);
                if (typeof G_vmlCanvasManager !== "undefined") {
                    canvas = G_vmlCanvasManager.initElement(canvas);
                }
                context = canvas.getContext("2d"); // Grab the 2d canvas context
                // Note: The above code is a workaround for IE 8 and lower. Otherwise we could have used:
                //     context = document.getElementById('canvas').getContext("2d");

                // Load images

                crayonImage.onload = resourceLoaded;
                crayonImage.src = "images/crayon-outline.png";

                markerImage.onload = resourceLoaded;
                markerImage.src = "images/marker-outline.png";

                eraserImage.onload = resourceLoaded;
                eraserImage.src = "images/eraser-outline.png";

                crayonBackgroundImage.onload = resourceLoaded;
                crayonBackgroundImage.src = "images/crayon-background.png";

                markerBackgroundImage.onload = resourceLoaded;
                markerBackgroundImage.src = "images/marker-background.png";

                eraserBackgroundImage.onload = resourceLoaded;
                eraserBackgroundImage.src = "images/eraser-background.png";

                crayonTextureImage.onload = resourceLoaded;
                crayonTextureImage.src = "images/crayon-texture.png";

                outlineImage.onload = resourceLoaded;
                outlineImage.src = "images/prub.png";
                
               
            };


    return {
        init: init
    };

}());


 $(document).ready(function () {
         initialize();
      });
 

      // works out the X, Y position of the click inside the canvas from the X, Y position on the page
      function getPosition(mouseEvent, sigCanvas) {
         var x, y;
         if (mouseEvent.pageX != undefined && mouseEvent.pageY != undefined) {
            x = mouseEvent.pageX;
            y = mouseEvent.pageY;
         } else {
            x = mouseEvent.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
            y = mouseEvent.clientY + document.body.scrollTop + document.documentElement.scrollTop;
         }
 
         return { X: x - sigCanvas.offsetLeft, Y: y - sigCanvas.offsetTop };
      }
 
      function initialize() {
         // get references to the canvas element as well as the 2D drawing context
         var sigCanvas = document.getElementById("canvasSignature");
         var context = sigCanvas.getContext("2d");
         var img = new Image();
         img.src = "images/prub.png";
         img.onload = function(){
           context.drawImage(this,0,0);  
         };
         
         context.strokeStyle = 'Black';
         
 
         // This will be defined on a TOUCH device such as iPad or Android, etc.
         var is_touch_device = 'ontouchstart' in document.documentElement;
 
         if (is_touch_device) {
            // create a drawer which tracks touch movements
            var drawer = {
               isDrawing: false,
               touchstart: function (coors) {
                  context.beginPath();
                  context.moveTo(coors.x, coors.y);
                  this.isDrawing = true;
               },
               touchmove: function (coors) {
                  if (this.isDrawing) {
                     context.lineTo(coors.x, coors.y);
                     context.stroke();
                  }
               },
               touchend: function (coors) {
                  if (this.isDrawing) {
                     this.touchmove(coors);
                     this.isDrawing = false;
                  }
               }
            };
 
            // create a function to pass touch events and coordinates to drawer
            function draw(event) {
 
               // get the touch coordinates.  Using the first touch in case of multi-touch
               var coors = {
                  x: event.targetTouches[0].pageX,
                  y: event.targetTouches[0].pageY
               };
 
               // Now we need to get the offset of the canvas location
               var obj = sigCanvas;
 
               if (obj.offsetParent) {
                  // Every time we find a new object, we add its offsetLeft and offsetTop to curleft and curtop.
                  do {
                     coors.x -= obj.offsetLeft;
                     coors.y -= obj.offsetTop;
                  }
				  // The while loop can be "while (obj = obj.offsetParent)" only, which does return null
				  // when null is passed back, but that creates a warning in some editors (i.e. VS2010).
                  while ((obj = obj.offsetParent) != null);
               }
 
               // pass the coordinates to the appropriate handler
               drawer[event.type](coors);
            }
 

            // attach the touchstart, touchmove, touchend event listeners.
            sigCanvas.addEventListener('touchstart', draw, false);
            sigCanvas.addEventListener('touchmove', draw, false);
            sigCanvas.addEventListener('touchend', draw, false);
 
            // prevent elastic scrolling
            sigCanvas.addEventListener('touchmove', function (event) {
               event.preventDefault();
            }, false); 
         }
         else {
 
            // start drawing when the mousedown event fires, and attach handlers to
            // draw a line to wherever the mouse moves to
            $("#canvasSignature").mousedown(function (mouseEvent) {
               var position = getPosition(mouseEvent, sigCanvas);
 
               context.moveTo(position.X, position.Y);
               context.beginPath();
 
               // attach event handlers
               $(this).mousemove(function (mouseEvent) {
                  drawLine(mouseEvent, sigCanvas, context);
               }).mouseup(function (mouseEvent) {
                  finishDrawing(mouseEvent, sigCanvas, context);
               }).mouseout(function (mouseEvent) {
                  finishDrawing(mouseEvent, sigCanvas, context);
               });
            });
 
         }
      }
 
      // draws a line to the x and y coordinates of the mouse event inside
      // the specified element using the specified context
      function drawLine(mouseEvent, sigCanvas, context) {
 
         var position = getPosition(mouseEvent, sigCanvas);
 
         context.lineTo(position.X, position.Y);
         context.stroke();
      }
 
      // draws a line from the last coordiantes in the path to the finishing
      // coordinates and unbind any event handlers which need to be preceded
      // by the mouse down event
      function finishDrawing(mouseEvent, sigCanvas, context) {
         // draw the line to the finishing coordinates
         drawLine(mouseEvent, sigCanvas, context);
 
         context.closePath();
 
         // unbind any events which could draw
         $(sigCanvas).unbind("mousemove")
                     .unbind("mouseup")
                     .unbind("mouseout");
      }